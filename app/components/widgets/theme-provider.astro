---
import { Icon } from "astro-icon/components";
---

<template data-id="x-theme-icons">
  <Icon
    name="lucide:sun"
    data-id="x-light"
    role="presentation"
    class="animate-rotate"
  />
  <Icon
    name="lucide:moon-star"
    data-id="x-dark"
    role="presentation"
    class="animate-rotate"
  />
  <Icon name="lucide:zap" data-id="x-auto" role="presentation" class="animate-rotate" />
</template>

{/* This is intentionally inlined to avoid FOUC. */}
<script is:inline>
  if (!window.ThemeProvider) {
    window.ThemeProvider = (function () {
      const storedTheme =
        typeof localStorage !== "undefined" && localStorage.getItem("x-theme");
      const mql = window.matchMedia("(prefers-color-scheme: light)");
      const theme = storedTheme || (mql.matches ? "light" : "dark");
      document.documentElement.dataset.theme = theme;
      document.documentElement.dataset.readerTheme =
        theme === "light" ? "github-light-default" : "github-dark-default";

      return {
        updateWidget(theme = storedTheme || "auto") {
          const widget = document.querySelector("astro-theme");
          /** @type {HTMLTemplateElement | null} */
          const tmpl = document.querySelector(`[data-id="x-theme-icons"]`);
          const themeIcon =
            tmpl && tmpl.content.querySelector(`[data-id="x-${theme}"]`);
          widget.querySelector("svg")?.remove();
          if (themeIcon) {
            widget
              .querySelector("span")
              ?.insertAdjacentElement("afterend", themeIcon.cloneNode(true));
          }
        },
      };
    })();
  }
</script>
