---
import { Icon } from "astro-icon/components";
---

<template id="x-icons">
  <Icon
    class="transition-colors"
    id="x-light-dark"
    name="lucide:palette"
    role="presentation"
  />
  <Icon
    class="transition-colors"
    id="x-auto"
    name="lucide:monitor-cog"
    role="presentation"
  />
</template>

{/* This is intentionally inlined to avoid FOUC. */}
<script is:inline>
  if (!globalThis.themeManager)
    globalThis.themeManager = (function () {
      const storedTheme =
        typeof localStorage !== "undefined" && localStorage.getItem("x-theme");
      const mql = globalThis.matchMedia("(prefers-color-scheme: light)");
      const theme = storedTheme || (mql.matches ? "light" : "dark");

      document.documentElement.dataset.mode = theme;
      document.documentElement.dataset.theme = `github-${theme}-default`;

      return {
        updatePicker(theme = storedTheme || "auto") {
          const resolvedValue =
            theme === "light" || theme === "dark" ? "light-dark" : "auto";

          const picker = document.querySelector("theme-picker");
          /** @type {HTMLTemplateElement | null} */
          const tmpl = document.getElementById("x-icons");
          const themeIcon = tmpl?.content?.getElementById(`x-${resolvedValue}`);
          picker?.querySelector("svg")?.remove();
          themeIcon &&
            picker
              ?.querySelector("span")
              ?.insertAdjacentElement("afterend", themeIcon.cloneNode(true));
        },
      };
    })();
</script>
