---
import Markdown from "@/components/content/markdown.astro";
import Wrapper from "@/components/layout/wrapper.astro";
import Root from "@/layouts/root.astro";

import { getCollection, getEntry, render } from "astro:content";

export async function getStaticPaths() {
  const entries = await getCollection(
    "projects",
    ({ data }) => !(import.meta.env.PROD && data.draft),
  );

  return entries.map((entry) => ({
    props: { entry },
    params: { slug: decodeURI(entry.id) },
  }));
}

const { entry } = Astro.props;

const [markdown] = await Promise.all([render(entry), getEntry(entry.data.author)]);

const { Content, remarkPluginFrontmatter } = markdown;

// update the collection schema with plugin data
entry.data.updatedAt = new Date(remarkPluginFrontmatter.updatedAt);
entry.data.duration = remarkPluginFrontmatter.duration;
entry.data.words = remarkPluginFrontmatter.words;

const { title, description } = entry.data;

Astro.response.headers.set("netlify-cache-tag", entry.id);

const meta = {
  title: [title, true],
  description: description,
  type: "article",
} satisfies Meta;
---

<Root meta={meta}>
  <Fragment slot="head"> </Fragment>
  <Wrapper>
    <div class="flex flex-col gap-4">
      <h1 id="headline" class="text-3xl font-extrabold text-slate-800 lg:text-5xl">
        {title}
      </h1>
      <Markdown>
        <Content />
      </Markdown>
    </div>
  </Wrapper>
</Root>
