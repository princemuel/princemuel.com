---
import Markdown from "@/components/content/markdown.astro";
import Wrapper from "@/components/layout/wrapper.astro";
import Link from "@/components/primitives/link.astro";
import Root from "@/layouts/root.astro";

import { Content } from "@/content/pages/projects.md";

import { getCollection } from "astro:content";

import type { GetStaticPaths } from "astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getCollection(
    "projects",
    ({ data }) => !(import.meta.env.PROD && data.draft),
  );

  return paginate(entries, { pageSize: 10 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const entries = page.data;

const meta = {
  title: ["Projects"],
  description:
    "A list of projects I've worked on, or am currently working on. Mostly web development",
} satisfies Meta;
---

<Root meta={meta}>
  <Wrapper>
    <div class="flex flex-col gap-4">
      <h1 id="headline" class="text-3xl font-extrabold text-slate-800 lg:text-5xl">
        Projects
      </h1>
      <Markdown>
        <Content />
      </Markdown>

      <section class="mt-8 flex flex-col gap-8">
        {
          entries.map(({ id, data }) => (
            <article class="flex flex-col gap-0.5">
              <hgroup class="flex items-center gap-2">
                <h3>
                  <Link
                    href={`/projects/${id}`}
                    class="hocus:underline text-lg font-bold text-slate-800"
                  >
                    {data.title}
                  </Link>
                </h3>
                <p class="rounded-full bg-slate-500 p-1">
                  <span class="sr-only">status: {data.status}</span>
                  <Icon
                    name="lucide:rotate-ccw"
                    size={10}
                    class="text-white"
                    title={`status: ${data.status}`}
                  />
                </p>
              </hgroup>
              <p class="text-base text-slate-600">{data.summary}</p>
              <Link
                href={`/projects/${id}`}
                class="hocus:text-slate-800 hocus:underline mt-2 flex text-sm text-slate-500"
              >
                View project details &RightArrow;
              </Link>
            </article>
          ))
        }
      </section>

      <div class="flex items-center gap-4 text-sm">
        {page.url.prev ? <Link href={page.url.prev}>Previous</Link> : null}
        {page.url.next ? <Link href={page.url.next}>Next</Link> : null}
      </div>
    </div>
  </Wrapper>
</Root>
