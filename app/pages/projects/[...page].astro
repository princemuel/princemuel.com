---
import Markdown from "@/components/content/markdown.astro";
import Article from "@/components/layout/article.astro";
import Container from "@/components/layout/container.astro";
import Link from "@/components/primitives/link.astro";
import Root from "@/layouts/root.astro";

import { Content } from "@/content/pages/projects.md";

import { getCollection } from "astro:content";

import type { GetStaticPaths } from "astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getCollection(
    "projects",
    ({ data }) => !(import.meta.env.PROD && data.draft),
  );

  return paginate(entries, { pageSize: 10 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const entries = page.data;
---

<Root
  title={["Projects"]}
  description="A list of projects I've worked on, or am currently working on. Mostly web development"
>
  <Container class="mt-12">
    <div class="grid grid-cols-1 gap-4 md:gap-6 lg:grid-cols-[5rem,1fr] lg:gap-12">
      <Article class="flex flex-col gap-4 lg:col-start-2">
        <h1 id="headline" class="text-3xl font-extrabold text-gray-800">Projects</h1>
        <Markdown>
          <Content />
        </Markdown>

        <section class="mt-8 flex flex-col gap-8">
          {
            entries.map(({ id, data }) => (
              <article class="flex flex-col gap-0.5">
                <hgroup class="flex items-center gap-2">
                  <h3>
                    <Link
                      href={`/projects/${id}`}
                      class="text-lg font-bold text-gray-800 hocus:underline"
                    >
                      {data.title}
                    </Link>
                  </h3>
                  <p class="rounded-pill bg-slate-500 p-1">
                    <span class="sr-only">status: {data.status}</span>
                    <Icon
                      name="lucide:rotate-ccw"
                      size={10}
                      class="text-white"
                      title={`status: ${data.status}`}
                    />
                  </p>
                </hgroup>
                <p class="text-base text-gray-600">{data.summary}</p>
                <Link
                  href={`/projects/${id}`}
                  class="mt-2 flex text-sm text-gray-500 hocus:text-gray-800 hocus:underline"
                >
                  View project details &RightArrow;
                </Link>
              </article>
            ))
          }
        </section>

        <div class="flex items-center gap-4 text-sm">
          {page.url.prev ? <Link href={page.url.prev}>Previous</Link> : null}
          {page.url.next ? <Link href={page.url.next}>Next</Link> : null}
        </div>
      </Article>
    </div>
  </Container>
</Root>
